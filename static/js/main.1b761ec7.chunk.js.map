{"version":3,"sources":["components/Navigation.js","components/HeaderHero.js","App.js","serviceWorker.js","index.js"],"names":["Brand","Navbar","Item","Menu","myInterests","faWordpress","faPhp","faReact","faDatabase","navLinks","label","color","url","icon","faGithub","faLinkedin","Navigation","props","navFixed","fixed","this","style","marginRight","Container","map","interest","i","renderAs","key","position","link","href","outlined","Component","heroContent","heading","content","Date","getFullYear","Field","Control","id","HeaderHero","item","Column","Columns","size","desktop","widescreen","Body","Hero","Form","hasNavbar","className","offset","createHeroContent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1b761ec7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Button, Container } from 'react-bulma-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithub, faLinkedin, faWordpress, faPhp, faReact } from '@fortawesome/free-brands-svg-icons';\nimport { faFileAlt, faDatabase } from '@fortawesome/free-solid-svg-icons/';\n\n\nconst { Brand, Item, Menu } = Navbar;\n\nconst myInterests = [\n    faWordpress, faPhp, faReact, faDatabase\n];\n\nconst navLinks = [\n    /* { label: \"Resum√©\", color: \"success\", url: \"#\", icon: faFileAlt }, */\n    { label: \"GitHub\", color: \"dark\", url: \"https://github.com/mattonomics/\", icon: faGithub },\n    { label: \"LinkedIn\", color: \"link\", url: \"https://linkedin.com/in/matthewsgross\", icon: faLinkedin },\n];\n\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n\n        // where the navbar should be. empty for non-static top\n        this.navFixed = \"top\";\n    }\n\n    render() {\n        return (\n            <>\n                <Navbar\n                    fixed={this.navFixed}\n                >\n                    <Container>\n                        <Brand>\n                            <Item>Matthew S. Gross</Item>\n                        </Brand>\n                        <Menu style={{ marginRight: \"0\" }}>\n                            <Navbar.Container>\n                                {myInterests.map(\n                                    (interest, i) => {\n                                        return (\n                                            <Item renderAs=\"span\" key={i}>\n                                                <FontAwesomeIcon\n                                                    icon={interest}\n                                                    style={{ marginRight: \".25em\" }}\n                                                />\n                                            </Item>\n                                        );\n                                    }\n                                )}\n                            </Navbar.Container>\n                            <Navbar.Container position=\"end\">\n                                {navLinks.map(\n                                    (link, i) => {\n                                        return (\n                                            <Item key={i} renderAs=\"span\">\n                                                <Button\n                                                    renderAs=\"a\"\n                                                    href={link.url}\n                                                    outlined\n                                                    color={link.color}\n                                                >\n                                                    <FontAwesomeIcon\n                                                        icon={link.icon}\n                                                        style={{ marginRight: \".25em\" }}\n                                                    />\n                                                    {link.label}\n                                                </Button>\n                                            </Item>\n                                        );\n                                    }\n                                )}\n                            </Navbar.Container>\n                        </Menu>\n                    </Container>\n                </Navbar >\n            </>\n        );\n    }\n}\n\nexport default Navigation;","import React, { Component } from 'react';\n\n// The Bulma components for this page\nimport { Hero, Columns, Button, Form, Content, Heading } from 'react-bulma-components';\n\nconst heroContent = [\n    {\n        heading: \"Key Areas of Expertise\",\n        content: <p>Over the past <strong>{(new Date().getFullYear() - 2009)} years</strong>, I have had roles as a product developer, a senior engineer, even as Director of Business Development. I've compiled a list of the skills I consider most important.</p>\n    },\n    {\n        heading: \"WordPress Engineering\",\n        content: <p>From extension of the REST API to Gutenberg blocks, implementation of a custom visual design, to augmentaiton of popular plugins like Gravity Forms and Advanced Cust Fields, I have worked deep in WordPress.</p>\n    },\n    {\n        heading: \"Business Development\",\n        content: <p>Whether leading an initial sales call or translating business goals into technical requirements, I have broad experience in technical, consultative sales in an agency setting.</p>\n    },\n    {\n        heading: \"Search Engine Optimization\",\n        content: <p>My specific focus is on technical SEO, which includes everything from basic metadata and sitemaps, to Schema.org integration, server responses, and performance (both on the server and in the browser).</p>\n    },\n    {\n        heading: \"Analytics &amp; Data\",\n        content: <p>Leveraging a diverse set of data sources, from Google Analytics and Hotjar, to more advanced integrations like Segment.io and raw server log analysis, I parse and analyze datasets to gain business insights.</p>\n    },\n    {\n        heading: \"Contact Me\",\n        content: <>\n            <p>Does my experience sound like it might be a good fit for you or your organization?</p>\n            <Form.Field>\n                <Form.Control>\n                    <Button\n                        renderAs=\"a\"\n                        href=\"mailto:mattonomics@gmail.com\"\n                        id=\"contact\"\n                        outlined\n                    >\n                        Contact Matthew &rarr;\n                        </Button>\n                </Form.Control>\n            </Form.Field>\n        </>\n    }\n];\n\nclass HeaderHero extends Component {\n    createHeroContent(item) {\n        const { Column } = Columns;\n        return (\n            <Column size={6} desktop={{ size: 'full' }} widescreen={{ size: 'half' }}>\n                <Content>\n                    <Heading size={4}>{item.heading}</Heading>\n                    <Content>\n                        {item.content}\n                    </Content>\n                </Content>\n            </Column>\n        );\n    }\n    render() {\n        const { Body } = Hero;\n        const { Column } = Columns;\n        const { Field, Control } = Form;\n\n        return (\n            <>\n                <Hero hasNavbar>\n                    <Body>\n                        <Columns>\n                            <Column size={5}>\n                                <Content>\n                                    <h1 className=\"title is-2\">\n                                        Professional Problem Solver.\n                                    </h1>\n                                    <p>\n                                        I solve complex marketing and business problems on the web with open source software like WordPress, a deep knowledge of SEO &amp; Analytics, and experience in enterprise consulting.\n                                    </p>\n                                    <p>\n                                        Whether I'm writing object-oriented PHP in a custom WordPress plugin, building a custom React app (like this site!), assessing a site's technical SEO, reporting on Analytics data, or leading a pre-sales discovery call with a potential client, I bring the same high-energy, and commitment to professional outcomes.\n                                    </p>\n                                    <Field>\n                                        <Control>\n                                            <Button\n                                                renderAs=\"a\"\n                                                href=\"mailto:mattonomics@gmail.com\"\n                                                id=\"contact\"\n                                                outlined\n                                            >\n                                                Contact Matthew &rarr;\n                                            </Button>\n                                        </Control>\n                                    </Field>\n                                </Content>\n                            </Column>\n                            <Column size={6} offset={1}>\n                                <Columns>\n                                    {heroContent.map((item) => this.createHeroContent(item))}\n                                </Columns>\n                            </Column>\n                        </Columns>\n                    </Body>\n                </Hero>\n            </>\n        );\n    }\n}\n\nexport default HeaderHero;","import React, { Component } from 'react';\n\n// custom componenets\nimport Navigation from './components/Navigation';\nimport HeaderHero from './components/HeaderHero';\n\n// bring in the css\nimport './App.sass';\n\n// main application control\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Navigation />\n        <HeaderHero />\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}